{
  "version": 3,
  "sources": ["../src/index.ts", "../src/parse.ts", "../src/runtimeHelpers.ts", "../src/transforms/transformElement.ts", "../src/transforms/transformExpression.ts", "../src/transforms/transformText.ts", "../src/transform.ts"],
  "sourcesContent": ["import { parse } from \"./parse\";\r\nimport { transform } from \"./transform\";\r\n\r\n\r\nexport function compile(template){\r\n    // \u5C06\u6A21\u677F\u8F6C\u6210\u62BD\u8C61\u8BED\u6CD5\u6811\r\n    const ast = parse(template); // \u8FD9\u91CC\u9700\u8981\u5C06html\u8BED\u6CD5\u8F6C\u6362\u6210js\u8BED\u6CD5  \u7F16\u8BD1\u539F\u7406\r\n\r\n    // codegen \u4E3A\u4E86\u751F\u6210\u4EE3\u7801\u7684\u65F6\u5019\u66F4\u65B9\u4FBF \u5728\u8F6C\u5316\u8FC7\u7A0B\u4E2D\u4F1A\u751F\u6210\u8FD9\u6837\u4E00\u4E2A\u5C5E\u6027\r\n    // \u8FD9\u91CC\u8F6C\u5316 \u8981\u8FDB\u884C\u6536\u96C6\u6240\u9700\u7684\u65B9\u6CD5 createElementVnode  toDisplayString  \r\n    // \u8FD9\u91CC\u9700\u8981\u5728\u751F\u6210\u4EE3\u7801\u4E4B\u524D\uFF0C\u5728\u505A\u4E00\u4E9B\u8F6C\u5316  <div>{{aa}} 123</div>  createElementVnode('div',toDisplayString(aa) + 123))\r\n\r\n\r\n    // \u5143\u7D20\u3001\u5C5E\u6027\u3001\u8868\u8FBE\u5F0F\u3001\u6587\u672C\r\n    transform(ast);\r\n\r\n\r\n    return ast\r\n    // \u5BF9ast\u8BED\u6CD5\u6811\u8FDB\u884C\u4E00\u4E9B\u9884\u5148\u5904\u7406 \r\n    // transform(ast); // \u4F1A\u751F\u6210\u4E00\u4E9B\u4FE1\u606F\r\n    // // \u4EE3\u7801\u751F\u6210\r\n    // return generate(ast); // \u6700\u7EC8\u751F\u6210\u4EE3\u7801  \u548Cvue\u7684\u8FC7\u7A0B\u4E00\u6837\r\n\r\n}\r\n", "import { NodeTypes } from \"./ast\";\r\n\r\nfunction createParserContext(template){\r\n    return {\r\n        line:1,\r\n        column:1,\r\n        offset: 0, \r\n        source:template, // \u6B64\u5B57\u6BB5\u4F1A\u88AB\u4E0D\u505C\u7684\u8FDB\u884C\u89E3\u6790 slice\r\n        originalSource:template\r\n    }\r\n}\r\n\r\nfunction isEnd(context){\r\n    const source = context.source;\r\n    if(context.source.startsWith('</')){\r\n        return true;\r\n    }\r\n    return !source; // \u5982\u679C\u89E3\u6790\u5B8C\u6BD5\u540E\u4E3A\u7A7A\u5B57\u7B26\u4E32\u65F6\u8868\u793A\u89E3\u6790\u5B8C\u6BD5\r\n}\r\n\r\nfunction getCursor(context){\r\n    let {line,column,offset} = context\r\n    return {line,column,offset}\r\n}\r\n\r\nfunction advancePositionWithMutation(context,source,endIndex){\r\n    let linesCount = 0;\r\n    let linePos = -1;\r\n    for(let i = 0; i < endIndex;i++){\r\n        if(source.charCodeAt(i) == 10){\r\n            linesCount++;\r\n            linePos = i;\r\n        }\r\n    }\r\n    context.line += linesCount\r\n    context.offset += endIndex;\r\n    context.column = linePos == -1?  context.column + endIndex : endIndex - linePos;\r\n}   \r\n\r\n\r\n\r\n\r\n\r\nfunction advanceBy(context,endIndex){\r\n    // \u6BCF\u6B21\u5220\u6389\u5185\u5BB9\u7684\u65F6\u5019 \u90FD\u8981\u66F4\u65B0\u6700\u65B0\u7684\u884C\u5217\u548C\u504F\u79FB\u91CF\u4FE1\u606F \r\n    let source = context.source\r\n    advancePositionWithMutation(context,source,endIndex);\r\n    context.source = source.slice(endIndex);\r\n}\r\nfunction parseTextData(context,endIndex){\r\n    const rawText = context.source.slice(0,endIndex);\r\n    advanceBy(context,endIndex);\r\n    return rawText;\r\n}\r\nfunction getSelection(context,start,end?){\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset,end.offset)\r\n    }\r\n\r\n}\r\n\r\nfunction parseText(context){\r\n    // \u5728\u89E3\u6790\u6587\u672C\u7684\u65F6\u5019 \u8981\u770B \u540E\u9762\u5230\u54EA\u91CC\u7ED3\u675F \r\n    let endTokens = ['<','{{'];\r\n    // as {{das<dsadsadda\r\n    let endIndex = context.source.length; // \u9ED8\u8BA4\u8BA4\u4E3A\u5230\u6700\u540E\u7ED3\u675F\r\n    for(let i = 0; i < endTokens.length;i++){\r\n        let index = context.source.indexOf(endTokens[i],1);\r\n        // \u627E\u5230\u4E86 \u5E76\u4E14\u7B2C\u4E00\u6B21\u6BD4\u6574\u4E2A\u5B57\u7B26\u4E32\u5C0F\r\n        if(index !== -1 && endIndex > index){\r\n            endIndex = index;\r\n        }\r\n    }\r\n    // \u521B\u5EFA \u884C\u5217\u4FE1\u606F\r\n    const start = getCursor(context); // \u5F00\u59CB\r\n    // \u53D6\u5185\u5BB9 \r\n    const content = parseTextData(context,endIndex);\r\n    return {\r\n        type:NodeTypes.TEXT,\r\n        content:content,\r\n        loc:getSelection(context,start)\r\n    }\r\n    // \u5728\u83B7\u53D6\u7ED3\u675F\u7684\u4F4D\u7F6E\r\n}\r\n// getCousor \u83B7\u53D6\u4F4D\u7F6E\u7684\u4FE1\u606F \u6839\u636E\u5F53\u524D\u7684\u4E0A\u4E0B\u6587\r\n// parseTextData \u5904\u7406\u6587\u672C\u5185\u5BB9\u7684\uFF0C \u5E76\u4E14\u4F1A\u66F4\u65B0\u6700\u65B0\u7684\u4FBF\u5B9C\u91CF\u4FE1\u606F\r\n// advancePositionWithMutation \u66F4\u65B0\u4FE1\u606F\r\n// getSelection \u83B7\u53D6\u5F53\u524D\u5F00\u5934\u548C\u7ED3\u5C3E\u7684\u4F4D\u7F6E\r\n// adanceBy \u4F1A\u8FDB\u884C\u524D\u8FDB\u5220\u9664\r\n\r\nfunction parseInterpolation(context){ // \u5904\u7406\u8868\u8FBE\u5F0F\u7684\u4FE1\u606F \r\n    const start = getCursor(context); // xxx  }}\r\n    const closeIndex = context.source.indexOf('}}',2); // \u67E5\u627E\u7ED3\u675F\u7684\u5927\u62EC\u53F7\r\n    advanceBy(context,2); // {{  xx }}\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context); // advancePositionWithMutation\r\n\r\n    // \u62FF\u5230\u539F\u59CB\u7684\u5185\u5BB9 \r\n    const rawContentLength = closeIndex - 2; // \u539F\u59CB\u5185\u5BB9\u7684\u957F\u5EA6\r\n    let  preContent = parseTextData(context,rawContentLength); // \u53EF\u4EE5\u8FD4\u56DE\u6587\u672C\u5185\u5BB9\uFF0C\u662F\u5E76\u4E14\u53EF\u4EE5\u66F4\u65B0\u4FE1\u606F\r\n    let content = preContent.trim();\r\n    let startOffset = preContent.indexOf(content)//   {{  xxxx}}\r\n\r\n    if(startOffset > 0){\r\n        advancePositionWithMutation(innerStart,preContent,startOffset)\r\n    }\r\n    let endOffset = startOffset + content.length\r\n    advancePositionWithMutation(innerEnd,preContent,endOffset)\r\n    advanceBy(context,2);\r\n    return {\r\n        type:NodeTypes.INTERPOLATION, // \u8868\u8FBE\u5F0F\r\n        content:{\r\n            type:NodeTypes.SIMPLE_EXPRESSION,\r\n            content,\r\n            loc:getSelection(context,innerStart,innerEnd)\r\n        },\r\n        loc:getSelection(context,start) // \u8868\u8FBE\u5F0F\u76F8\u5173\u7684\u4FE1\u606F\r\n    }\r\n\r\n}\r\n\r\nfunction advanceBySpaces(context){\r\n    let match = /^[ \\t\\r\\n]+/.exec(context.source);\r\n    if(match){\r\n        advanceBy(context,match[0].length);\r\n    }\r\n}\r\nfunction parseAttributeValue(context){\r\n    const start = getCursor(context);\r\n    let quote =  context.source[0];\r\n    let content;\r\n    if(quote == '\"' || quote === \"'\"){\r\n        advanceBy(context,1); // \"a\"\r\n        const endIndex = context.source.indexOf(quote);\r\n        content = parseTextData(context,endIndex);\r\n        advanceBy(context,1); // \"a\"\r\n    }\r\n    return {\r\n        content,\r\n        loc:getSelection(context,start)\r\n    }\r\n\r\n}\r\n\r\nfunction parseAttribute(context){\r\n    const start = getCursor(context);\r\n    // \u5C5E\u6027\u7684\u540D\u5B57\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    let name = match[0];\r\n    advanceBy(context,name.length); // a  = '\r\n    advanceBySpaces(context);\r\n    advanceBy(context,1);\r\n    let value = parseAttributeValue(context);\r\n    return {\r\n        type:NodeTypes.ATTRIBUTE,\r\n        name,\r\n        value:{\r\n            type:NodeTypes.TEXT,\r\n            ...value\r\n        },\r\n        loc : getSelection(context,start)\r\n    }\r\n}\r\nfunction parseAttributes(context){  // a=1 b=2 >\r\n    const props = []; \r\n    while(context.source.length > 0 && !context.source.startsWith('>')){\r\n        const prop = parseAttribute(context);\r\n        props.push(prop);\r\n        advanceBySpaces(context); \r\n    }\r\n    return props;\r\n}\r\nfunction parseTag(context){  \r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^ \\t\\r\\n/>]*)/.exec(context.source);\r\n    const tag = match[1]; // \u6807\u7B7E\u540D   div   aa=1  >\r\n    advanceBy(context,match[0].length); // \u5220\u9664\u6574\u4E2A\u6807\u7B7E\r\n    advanceBySpaces(context); \r\n\r\n    let props = parseAttributes(context)\r\n    // <div>  <div/>    \r\n    // \u53EF\u80FD\u6709\u5C5E\u6027 \r\n    let isSelfClosing = context.source.startsWith('/>')\r\n\r\n    advanceBy(context,isSelfClosing?2:1)\r\n    return {\r\n        type:NodeTypes.ELEMENT,\r\n        tag:tag,\r\n        isSelfClosing,\r\n        children:[],\r\n        props,\r\n        loc:getSelection(context,start)\r\n    }\r\n}\r\nfunction parseElement(context){\r\n     // </div>\r\n    let ele = parseTag(context);  // <div>\r\n    // \u513F\u5B50\r\n    let children = parseChildren(context) // \u5904\u7406\u513F\u5B50\u7684\u65F6\u5019 \u53EF\u80FD\u6CA1\u6709\u513F\u5B50\r\n    if(context.source.startsWith('</')){  \r\n        parseTag(context)\r\n    }\r\n    ele.loc = getSelection(context,ele.loc.start); // \u8BA1\u7B97\u6700\u65B0\u7684\u4F4D\u7F6E\u4FE1\u606F\r\n    ele.children = children;// \u6302\u8F7D\u513F\u5B50\u8282\u70B9\r\n    return ele;\r\n}\r\nexport function parse(template){\r\n    // \u521B\u5EFA\u4E00\u4E2A\u89E3\u6790\u7684\u4E0A\u4E0B\u6587 \u6765\u8FDB\u884C\u5904\u7406 \r\n    const context = createParserContext(template);\r\n    // < \u5143\u7D20\r\n    // {{}} \u8BF4\u660E\u8868\u8FBE\u5F0F\r\n    // \u5176\u4ED6\u5C31\u662F\u6587\u672C\r\n    const start = getCursor(context)\r\n    return createRoot(parseChildren(context),getSelection(context,start));\r\n}\r\nfunction createRoot(children,loc){\r\n    return {\r\n        type:NodeTypes.ROOT, // Fragment\r\n        children,\r\n        loc\r\n    }\r\n}\r\nfunction parseChildren(context){\r\n    const nodes = [];\r\n    while(!isEnd(context)){ \r\n        const source = context.source;\r\n        let node;\r\n        if(source.startsWith('{{')){\r\n            node = parseInterpolation(context);\r\n        }else if(source[0] === '<'){ // \u6807\u7B7E\r\n            node = parseElement(context);\r\n        }\r\n        // \u6587\u672C\r\n        if(!node){ // {{aa}}  aaa  {{bbb}}\r\n            node = parseText(context);\r\n        }\r\n        nodes.push(node)\r\n    }\r\n    nodes.forEach((node,i)=>{\r\n        if(node.type === NodeTypes.TEXT){\r\n           if( !/[^\\t\\r\\n\\f ]/.test(node.content)){\r\n               nodes[i] = null;\r\n           }\r\n        }\r\n    });\r\n    return nodes.filter(Boolean)\r\n}", "export const TO_DISPLAY_STRING = Symbol('toDisplayString')\r\n\r\nexport const helperMap = {\r\n    [TO_DISPLAY_STRING]:'toDisplayString'\r\n}\r\n\r\n\r\n", "import { NodeTypes } from \"../ast\";\r\n\r\nexport function transformElement(node,context){   // \u6211\u4EEC\u671F\u671B \u7ED9\u6240\u6709\u513F\u5B50\u5904\u7406\u5B8C\u540E\uFF0C\u7ED9\u5143\u7D20\u91CD\u65B0\u6DFB\u52A0children\u5C5E\u6027\r\n    // \u53EF\u4EE5\u5224\u65AD\u4F60\u662F\u4E0D\u662F\u5143\u7D20\r\n    if(node.type === NodeTypes.ELEMENT){\r\n        return () =>{\r\n        }\r\n    }\r\n}", "import { NodeTypes } from \"../ast\"\r\n\r\nexport function transformExpression(node,context){ // {{aaa}} -> _ctx.aaa\r\n    // \u662F\u4E0D\u662F\u8868\u8FBE\u5F0F\r\n    if(node.type === NodeTypes.INTERPOLATION){\r\n        let content = node.content.content\r\n        node.content.content = `_ctx.${content}`\r\n    }\r\n}\r\n\r\n// \u66FF\u6362\u5E76\u4E14\u589E\u52A0\u65B9\u6CD5 \u5373\u53EF", "import { NodeTypes } from \"../ast\"\r\n\r\nexport function transformText(node,context){ // \u6211\u671F\u671B \u5C06\u591A\u4E2A\u5B50\u8282\u70B9\u62FC\u63A5\u5728\u4E00\u8D77 \r\n    // \u4F60\u662F\u4E0D\u662F\u6587\u672C\r\n    // \u9700\u8981\u9047\u5230\u5143\u7D20\u7684\u65F6\u5019 \u624D\u80FD\u5904\u7406 \u591A\u4E2A\u5B50\u8282\u70B9  \r\n    if(node.type === NodeTypes.ELEMENT || node.type === NodeTypes.ROOT){\r\n        return () =>{\r\n        }\r\n    }\r\n}\r\n\r\n// codegen (\u5468\u65E5 pinia\u7684\u5B9E\u73B0\u539F\u7406 vue-router\u5B9E\u73B0\u539F\u7406)\r\n\r\n\r\n// \u624B\u5199\u4E00\u4E2Akeep-alive provide / inject  teleport suspense \r\n\r\n\r\n// ts -> \r\n\r\n\r\n// ts + vite + pinia \r\n\r\n", "\r\nimport { NodeTypes } from \"./ast\";\r\nimport { TO_DISPLAY_STRING } from \"./runtimeHelpers\";\r\nimport { transformElement } from \"./transforms/transformElement\";\r\nimport { transformExpression } from \"./transforms/transformExpression\";\r\nimport { transformText } from \"./transforms/transformText\";\r\n\r\nfunction createTransformContext(root){\r\n    const context = {\r\n        currentNode:root, // \u5F53\u524D\u6B63\u5728\u8F6C\u5316\u7684\u662F\u8C01\r\n        parent:null, // \u5F53\u524D\u8F6C\u5316\u7684\u7236\u8282\u70B9\u662F\u8C01\r\n        helpers: new Map(), // \u4F18\u5316 \u8D85\u8FC720\u4E2A\u76F8\u540C\u8282\u70B9\u4F1A\u88AB\u5B57\u7B26\u4E32\u5316\r\n\r\n        helper(name){ // \u6839\u636E\u4F7F\u7528\u8FC7\u7684\u65B9\u6CD5\u8FDB\u884C\u4F18\u5316\r\n            const count = context.helpers.get(name) || 0;\r\n            context.helpers.set(name,count+1);\r\n            return name\r\n        },\r\n        nodeTransforms:[\r\n            transformElement,\r\n            transformText,\r\n            transformExpression,\r\n        ]\r\n    }\r\n    return context\r\n}\r\nfunction traverse(node,context){\r\n    context.currentNode = node;\r\n    const transforms = context.nodeTransforms;\r\n    const exitsFns = [];\r\n    for(let i = 0; i < transforms.length;i++){\r\n        let onExit =  transforms[i](node,context); // \u5728\u6267\u884C\u7684\u65F6\u5019 \u6709\u53EF\u80FD\u8FD9\u4E2Anode\u88AB\u5220\u9664\u4E86\r\n        if(onExit){\r\n            exitsFns.push(onExit);\r\n        }\r\n        if(!context.currentNode) return; // \u5982\u679C\u5F53\u524D\u8282\u70B9\u88AB\u5220\u6389\u4E86\uFF0C\u90A3\u4E48\u5C31\u4E0D\u8003\u8651\u513F\u5B50\u4E86\r\n    }\r\n    switch(node.type){\r\n        case NodeTypes.INTERPOLATION:\r\n            // \u5B8F \u5E38\u91CF\r\n            context.helper(TO_DISPLAY_STRING)\r\n            break;\r\n        case NodeTypes.ELEMENT:\r\n        case NodeTypes.ROOT:\r\n            for(let i = 0; i < node.children.length;i++){\r\n                context.parent = node;\r\n                traverse(node.children[i],context)\r\n            }\r\n    }\r\n    context.currentNode  = node; // \u5F53\u6267\u884C\u9000\u51FA\u97E9\u5F0F\u7684\u65F6\u5019\u4FDD\u8BC1currentNode\u6307\u5411\u7684\u4F9D\u65E7\u662F\u5BF9\u7684\r\n    let i = exitsFns.length;\r\n    while(i--){\r\n        exitsFns[i]();\r\n    }\r\n\r\n\r\n}\r\nexport function transform(ast){\r\n    // \u5BF9\u6811\u8FDB\u884C\u904D\u5386\u64CD\u4F5C\r\n    const context = createTransformContext(ast);\r\n    traverse(ast,context);\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
