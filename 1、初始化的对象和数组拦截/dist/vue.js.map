{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\r\n  return typeof val === \"function\";\r\n}\r\nexport function isObject(val) {\r\n  return typeof val == \"object\" && val !== null;\r\n}\r\n\r\nexport function isArray(val) {\r\n  return Array.isArray(val);\r\n}\r\n","// console.log(Array.prototype); //这个是数组里面的方法\r\n// console.log(Array.__proto__); //这个是ƒ () { [native code] }\r\n\r\nlet oldArrayPrototype = Array.prototype;\r\nexport let arrayMethods = Object.create(oldArrayPrototype); // 让arrayMethods 通过__proto__ 能获取到数组的方法\r\n\r\nlet methods = [\r\n  // 只有这七个方法 可以导致数组发生变化\r\n  \"push\",\r\n  \"shift\",\r\n  \"pop\",\r\n  \"unshift\",\r\n  \"reverse\",\r\n  \"sort\",\r\n  \"splice\",\r\n];\r\n\r\nmethods.forEach((i) => {\r\n  arrayMethods[i] = function (...args) {\r\n    oldArrayPrototype[i].call(this, ...args);\r\n    console.log(\"数组方法重写\");\r\n    let insert = [];\r\n    switch (i) {\r\n      case \"splice\":\r\n        insert = args.slice(2);\r\n        break;\r\n      case \"push\":\r\n      case \"unshift\":\r\n        insert = args;\r\n        break;\r\n    }\r\n    //这里添加了 但是数组里面如果有对象还是需要劫持的  想到index.js有一个劫持数组的方法\r\n\r\n    if (insert) this._ob_.observeArray(insert);\r\n  };\r\n});\r\n","import { isArray, isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\n\r\nclass Observe {\r\n  constructor(value) {\r\n    Object.defineProperty(value, \"_ob_\", {\r\n      value: this,\r\n      enumerable: false, // 标识这个属性不能被列举出来，不能被循环到\r\n    });\r\n    if (isArray(value)) {\r\n      // 不让__ob__ 被遍历到\r\n      //value.__ob__ = this; // 我给对象和数组添加一个自定义属性(这样设置的话,会走进observe的逻辑无线递归)\r\n\r\n      value.__proto__ = arrayMethods;\r\n\r\n      this.observeArray(value); //是让数组里面假如有对象再进行一步监听\r\n    } else {\r\n      this.walk(value);\r\n    }\r\n  }\r\n  observeArray(data) {\r\n    // 递归遍历数组，对数组内部的对象再次重写 [[]]  [{}]\r\n    // vm.arr[0].a = 100;\r\n    // vm.arr[0] = 100;\r\n    data.forEach((item) => observe(item)); // 数组里面如果是引用类型那么是响应式的\r\n  }\r\n  walk(data) {\r\n    //todo 循环对象的key且不要原型上面的key\r\n    Object.keys(data).forEach((key) => {\r\n      defineReactive(data, key, data[key]);\r\n    });\r\n  }\r\n}\r\nfunction defineReactive(obj, key, value) {\r\n  //todo data里面嵌套对象的话递归调用(这个是vue2性能差的一个原因)\r\n  observe(value);\r\n  //todo 这是一个闭包这个value不能被销毁\r\n  Object.defineProperty(obj, key, {\r\n    get() {\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      console.log(\"我被处罚\");\r\n      observe(newValue); //如果新的值是一个新对象也需要劫持\r\n      if ((newValue = value)) {\r\n        return;\r\n      }\r\n      value = newValue;\r\n    },\r\n  });\r\n}\r\nexport function observe(value) {\r\n  //console.log(value);\r\n  //   if(!isObject(value){\r\n  //       return\r\n  //   }\r\n  if (!isObject(value)) {\r\n    return;\r\n  }\r\n  if (value._ob_) {\r\n    return;\r\n  }\r\n  return new Observe(value);\r\n}\r\n","import { observe } from \"./observe\";\r\nimport { isFunction } from \"./utils\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\nfunction proxy(vm, key, source) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key];\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue;\r\n    },\r\n  });\r\n}\r\nfunction initData(vm) {\r\n  //console.log(\"初始化vm\");\r\n  let data = vm.$options.data;\r\n  //如果data写的是函数this指向是window所以我们需要用call重置(对call的一个理解call里面如果写个this当第一个参数,意思就是谁调用他就谁当this,不改变原来执行的this)\r\n  //例子 arr.push.call(this) 那这个就是正常执行push方法原来的this其实arr 这样写的好处是可以加多个参数因为call第二个参数可以是数组 arr.push.call(this,...args)\r\n  data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n\r\n  //为什么不能直接用vm.$options.data而是要再整一个_data因为如果data是函数的话,堆地址就变了 就不是同一个了\r\n  // console.log(data === vm.$options.data);  如果data是对象的话 是一样的 但是函数的话就没有get set劫持了 因为指的不是一个堆地址\r\n  observe(data);\r\n\r\n  //! 这一步是为了让外面的vm可以直接通过vm.xxx获取数据做了一层代理\r\n  //? 我发现不用这个vm._data 好像也可以直接把data传过去一样的 都是一个代理空间  但是这里可能是为了让vm上面挂一个_data数据\r\n  for (let key in data) {\r\n    proxy(vm, key, \"_data\");\r\n  }\r\n  //? 被观测后的逻辑都可以在这调试\r\n  //console.log(data);\r\n  //data.a.c.push(1); 看看有没有重置成功\r\n}\r\n","import { initState } from \"./state\";\r\n\r\nexport function _initMax(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this;\r\n    //console.log(this);//todo实例对象\r\n    vm.$options = options;\r\n    initState(vm); //初始化\r\n    if (options.el) {\r\n      // console.log(options.el);\r\n    }\r\n  };\r\n}\r\n","import { _initMax } from \"./init\";\r\n//todo new Vue的时候先做一个初始化操作_init,但是需要先在实例的prototype上挂一个_init方法,这个步骤在_initMax中实现\r\nfunction Vue(options) {\r\n  this._init(options);\r\n}\r\n_initMax(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["isFunction","val","isObject","isArray","Array","oldArrayPrototype","prototype","arrayMethods","Object","create","methods","forEach","i","args","call","console","log","insert","slice","_ob_","observeArray","Observe","constructor","value","defineProperty","enumerable","__proto__","walk","data","item","observe","keys","key","defineReactive","obj","get","set","newValue","initState","vm","opts","$options","initData","proxy","source","_data","_initMax","Vue","_init","options","el"],"mappings":"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"}