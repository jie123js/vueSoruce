{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\r\n  return typeof val === \"function\";\r\n}\r\nexport function isObject(val) {\r\n  return typeof val == \"object\" && val !== null;\r\n}\r\n\r\nexport function isArray(val) {\r\n  return Array.isArray(val);\r\n}\r\n","console.log(Array.prototype); //这个是数组里面的方法\r\nconsole.log(Array.__proto__); //这个是ƒ () { [native code] }\r\n\r\nlet oldArrayPrototype = Array.prototype;\r\nexport let arrayMethods = Object.create(oldArrayPrototype); // 让arrayMethods 通过__proto__ 能获取到数组的方法\r\nconsole.log(arrayMethods);\r\nlet methods = [\r\n  // 只有这七个方法 可以导致数组发生变化\r\n  \"push\",\r\n  \"shift\",\r\n  \"pop\",\r\n  \"unshift\",\r\n  \"reverse\",\r\n  \"sort\",\r\n  \"splice\",\r\n];\r\n\r\nmethods.forEach((i) => {\r\n  arrayMethods[i] = function () {\r\n    console.log(\"数组方法重写\");\r\n  };\r\n});\r\n","import { isArray, isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\n\r\nclass Observe {\r\n  constructor(value) {\r\n    if (isArray(value)) {\r\n      console.log(value);\r\n\r\n      value.__proto__ = arrayMethods;\r\n    } else {\r\n      this.walk(value);\r\n    }\r\n  }\r\n  walk(data) {\r\n    //todo 循环对象的key且不要原型上面的key\r\n    Object.keys(data).forEach((key) => {\r\n      defineReactive(data, key, data[key]);\r\n    });\r\n  }\r\n}\r\nfunction defineReactive(obj, key, value) {\r\n  //todo data里面嵌套对象的话递归调用(这个是vue2性能差的一个原因)\r\n  observe(value);\r\n  //todo 这是一个闭包这个value不能被销毁\r\n  Object.defineProperty(obj, key, {\r\n    get() {\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      if ((newValue = value)) {\r\n        return;\r\n      }\r\n      value = newValue;\r\n    },\r\n  });\r\n}\r\nexport function observe(value) {\r\n  //console.log(value);\r\n  //   if(!isObject(value){\r\n  //       return\r\n  //   }\r\n  if (!isObject(value)) {\r\n    return;\r\n  }\r\n  return new Observe(value);\r\n}\r\n","import { observe } from \"./observe\";\r\nimport { isFunction } from \"./utils\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\nfunction proxy(vm, key, source) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key];\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue;\r\n    },\r\n  });\r\n}\r\nfunction initData(vm) {\r\n  //console.log(\"初始化vm\");\r\n  let data = vm.$options.data;\r\n  //如果data写的是函数this指向是window所以我们需要用call重置(对call的一个理解call里面如果写个this当第一个参数,意思就是谁调用他就谁当this,不改变原来执行的this)\r\n  //例子 arr.push.call(this) 那这个就是正常执行push方法原来的this其实arr 这样写的好处是可以加多个参数因为call第二个参数可以是数组 arr.push.call(this,...args)\r\n  data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n\r\n  //为什么不能直接用vm.$options.data而是要再整一个_data因为如果data是函数的话,堆地址就变了 就不是同一个了\r\n  // console.log(data === vm.$options.data);  如果data是对象的话 是一样的 但是函数的话就没有get set劫持了 因为指的不是一个堆地址\r\n  observe(data);\r\n\r\n  //! 这一步是为了让外面的vm可以直接通过vm.xxx获取数据做了一层代理\r\n  //? 我发现不用这个vm._data 好像也可以直接把data传过去一样的 都是一个代理空间  但是这里可能是为了让vm上面挂一个_data数据\r\n  for (let key in data) {\r\n    proxy(vm, key, \"_data\");\r\n  }\r\n  //? 被观测后的逻辑都可以在这调试\r\n  //console.log(data);\r\n  //data.a.c.push(1); 看看有没有重置成功\r\n}\r\n","import { initState } from \"./state\";\r\n\r\nexport function _initMax(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this;\r\n    //console.log(this);//todo实例对象\r\n    vm.$options = options;\r\n    initState(vm); //初始化\r\n    if (options.el) {\r\n      // console.log(options.el);\r\n    }\r\n  };\r\n}\r\n","import { _initMax } from \"./init\";\r\n//todo new Vue的时候先做一个初始化操作_init,但是需要先在实例的prototype上挂一个_init方法,这个步骤在_initMax中实现\r\nfunction Vue(options) {\r\n  this._init(options);\r\n}\r\n_initMax(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["isFunction","val","isObject","isArray","Array","console","log","prototype","__proto__","oldArrayPrototype","arrayMethods","Object","create","methods","forEach","i","Observe","constructor","value","walk","data","keys","key","defineReactive","obj","observe","defineProperty","get","set","newValue","initState","vm","opts","$options","initData","proxy","source","_data","call","_initMax","Vue","_init","options","el"],"mappings":"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"}